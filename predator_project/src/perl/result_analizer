#!/usr/bin/perl

use strict;
use warnings;
use Text::Table;
use Getopt::Long;
my $file;
GetOptions ("file=s" => \$file);
open my $results, $file or die $!;
my %map;
my %one_enogh;
my $num = 0;
my $inst = 0;
my $first;

while(my $line  = <$results>){
	next unless $line =~ /^\d.*/;
	chomp $line;
	my @attrs = split(";", $line);
	$attrs[-1] =~ s/"//g;
	$attrs[-5] =~ s/"//g;
	$attrs[-4] =~ s/"//g;
	${$map{$attrs[-4]}}{id} = $attrs[-5];  
	push (@{$map{$attrs[-4]}{labels}}, $attrs[-1]);
	$num++;
	if(exists $one_enogh{$attrs[-4]}){
		next if ${$one_enogh{$attrs[-4]}}{predicted} eq "p";
		${$one_enogh{$attrs[-4]}}{predicted} = $attrs[-1];
	}else{
				${$one_enogh{$attrs[-4]}}{predicted} = $attrs[-1];
		${$one_enogh{$attrs[-4]}}{label} = $attrs[-5];
	}
}
close $results;
my $tp = 0; 
my $tn = 0;
my $fp = 0;
my $fn = 0;
for my $key (keys %map){
	$inst++;
	my $p = ${$map{$key}}{id};
	$p =~ s/"//g;
	my @labels = @{$map{$key}{labels}};
	my $l_p = 0; 
	my $l_np = 0;
	foreach my $l(@labels){
		chomp($l);
		$l =~ s/"//g;
		$l_p++ if($l eq "p");
		$l_np++ if $l eq "np";
	}
	if($p eq "p"){
		if($l_p >= $l_np){
			$tp++;
		}else{
			$fn++;
		}
	}elsif($p eq "np"){
		if($l_p <= $l_np){
			$tn++;
		}else{
			$fp++;
		}
	}
}

print "MAJORITY VOTES\n";
my $tb = Text::Table->new( "actual", "predicted p:", "predicted np:");
$tb->load( [ "p:", $tp, $fn ],
       	[ "np:", $fp, $tn ]);

print $tb;

print "\nTotal tuples = $num\nTotal instances = $inst\n";
my $prec = sprintf("%.3f", ($tp/($tp+$fp)));
my $rec = sprintf("%.3f", ($tp/($tp+$fn)));
my $f_5 = sprintf("%.3f", f_mes(0.5));
my $f1 = sprintf("%.3f", f_mes(1));
my $f3 = sprintf("%.3f", f_mes(3));

my $tb2 = Text::Table->new( "precision", "recall", "f0.5", "f1", "f3");
$tb2->load( [ $prec, $rec, $f_5, $f1, $f3 ]);
print "\n";
print $tb2;

$tp = 0; 
$tn = 0;
$fp = 0;
$fn = 0;
for my $key(keys %one_enogh){
	if(${$one_enogh{$key}}{label} eq "p"){
		$tp++ if ${$one_enogh{$key}}{predicted} eq "p";
		$fn++ if ${$one_enogh{$key}}{predicted} eq "np";
	}elsif(${$one_enogh{$key}}{label} eq "np"){
		$fp++ if ${$one_enogh{$key}}{predicted} eq "p";
		$tn++ if ${$one_enogh{$key}}{predicted} eq "np";
	}else{
		die "there's something wrong!\n";
	}	
}



print "\nONE PREDICTION AS P LABELS P\n";
$tb = Text::Table->new( "actual", "predicted p:", "predicted np:");
$tb->load( [ "p:", $tp, $fn ],
       	[ "np:", $fp, $tn ]);

print $tb;

$prec = sprintf("%.3f", ($tp/($tp+$fp)));
$rec = sprintf("%.3f", ($tp/($tp+$fn)));
$f_5 = sprintf("%.3f", f_mes(0.5));
$f1 = sprintf("%.3f", f_mes(1));
$f3 = sprintf("%.3f", f_mes(3));

$tb2 = Text::Table->new( "precision", "recall", "f0.5", "f1", "f3");
$tb2->load( [ $prec, $rec, $f_5, $f1, $f3 ]);
print "\n";
print $tb2;


sub f_mes{
	my $fB = shift;
	return ((($fB^2)+1)*($prec*$rec))/(($fB^2)*$prec+$rec);
}

